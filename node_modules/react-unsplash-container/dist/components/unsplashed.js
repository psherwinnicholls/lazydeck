'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (_ref) {
  var children = _ref.children,
      src = _ref.src,
      size = _ref.size,
      fixed = _ref.fixed,
      keywords = _ref.keywords,
      style = _ref.style;
  var unsplashedContainerStyle = styles.unsplashedContainerStyle;


  var sourceUrl = '//source.unsplash.com';
  if (src) {
    var _username = src.username,
        _likes = src.likes,
        _collectionId = src.collectionId;

    if (_username) {
      sourceUrl = sourceUrl + '/user/' + _username + (_likes ? '/likes' : '');
    } else if (_collectionId) {
      sourceUrl = sourceUrl + '/collection/' + _collectionId;
    } else {
      sourceUrl = sourceUrl + '/random';
    }
  } else {
    sourceUrl = sourceUrl + '/random';
  }

  if (size) {
    var _width = size.width,
        _height = size.height;

    sourceUrl = sourceUrl + '/' + _width + 'x' + _height;
  }

  if (fixed && (fixed === 'daily' || fixed === 'weekly')) {
    sourceUrl = sourceUrl + '/' + fixed;
  }

  if (keywords) {
    if (typeof keywords === 'string') {
      sourceUrl = sourceUrl + '/?' + keywords;
    } else if (Array.isArray(keywords)) {
      sourceUrl = sourceUrl + '/?' + keywords.join(',');
    }
  }

  return _react2.default.createElement(
    'div',
    { style: _extends({}, style, unsplashedContainerStyle, { backgroundImage: 'url(' + sourceUrl + ')' }) },
    children
  );
};

var styles = {
  unsplashedContainerStyle: {
    backgroundRepeat: 'no-repeat',
    backgroundSize: 'cover'
  }
};